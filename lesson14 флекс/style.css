.box{
    display: flex;
    height: 600px;

    /*
        Все элементы внутри превращаются в флекс-элементы. А элемент box
        ведет себя как блочный.

        display: inline-flex;
        То же самое, только box будет себя вести как inline-block.


        На флекс-элементы не влияют параметры такие как:
        float
        clear
        vertical-align
        columns

        Есть параметры, которые отменяют флекс-элемент и выкидывают его из
        потока флекс-элементов
        position: absolute \ fixed 

        relative можно!
    */

    flex-direction: row;
    /*
        Меняет направление Главной оси
        row(по умолчанию) - горзионтальная ось с лева на право
        column - вертикальная ось с верху вниз
        row-reverse - горизонтальная ось с права на лево
        column-reverse - вертикальная ось с низу вверх
    */

    flex-wrap: wrap;

    /*
        nowrap(по умолчанию) - не позволяет элементам переноситься на новую строку
        wrap - позволяет элементам переноситься на новую строку, если им 
        не хватает места
        wrap-reverse - то что и wrap, только перенос будет не в низ а вверх

    */

    flex-flow: row nowrap;

    /*
        Позволяет назначить сразу 2 параметра
        flex-flow: flex-direction flex-wrap;
    */

    justify-content: space-evenly;

    /*
        flex-start (по умолчанию) - элементы идут начиная с начала Главной оси
        flex-end - элементы прижимаются к концу Главной оси
        center - элементы центрируются (распределяя пространство оставшееся по краям)
        space-between - крайние элементы прижимаются к краям флексбокса и оставшееся
        место распределяется как промежутки между ними
        space-around - свободное место распределяется как промежуток между всеми 
        элементами. Крайнее левое и крайнее правое пространство будет в 2 раза меньше
        чем между остальными элементами.
        space-evenly - то же что и space-around, только крайний левый и крайний правый 
        отступ будет равен всем отступам между элементами.
    */

    align-content: stretch;

    /*
        stretch(по умолчанию) - элементы занимают максимальную высоту кросс-оси
        родителя (растягиваются на эту высоту). Если элементы в 2 ряда, они делят 
        высоту поровну по-умолчанию.
        flex-start - элементы прижимаются к верхней части флексбокса
        flex-end - элементы прижимаются к нижней части флексбокса
        center - элементы центрируются относительно кросс-оси
        space-between - крайние элементы прижимаются к краям кросс-оси, оставшееся место
        распределяется как отступы между элементами.
        space-around - свободное место распределяется между рядами, крайний верхний
        и крайний нижний отступ в 2 раза меньше чем между рядами.
        space-evenly - то же что и space-around, только все отступы по кросс-оси
        одинаковые (между рядами).
    */


    align-items: stretch;

    /*
        stretch (по умолчанию) - элементы растягиваются заполняя всю строку
        по высоте
        flex-start - элементы прижимаются к началу ряда(строки)
        flex-end - элементы прижимаются к концу ряда
        center - элементы выравниваются по центру ряда
        baseline - элементы выравниваются по базовой линии текста
        (базовая линия начинает совпадать с Главной осью)
    */


}

.box div:nth-child(1){
    background: red;
    height: 100px;

    flex-shrink: 4;

    align-self: flex-end;

    /*
        stretch
        flex-start
        flex-end
        center
        baseline
    */

    order: 1;
}
.box div:nth-child(2){
    background: blue;
    height: 50px;
    order: 2;
}
.box div:nth-child(3){
    background: green;
    order: 3;
}
.box div:nth-child(4){
    background: purple;

}
.box div:nth-child(5){
    background: yellow;
 
}
.box div:nth-child(6){
    background: orange;
    order: -1;
}

.box div{
    flex-grow: 1;
    flex-basis: 200px;

}

/*
    flex-basis - устанавливает базовую ширину элемента, либо ширину которая будет 
    вычислена до всех условий влияющих на ширину элемента.
    Поддерживает px \ em \ rem \ % \ vw \ vh

    flex-grow по умолчанию 0
    нужен для распределения свободного места в строке между элементами

    flex-shrink - это коэффициент уменьшения элемента. Оно противоположно
    flex-grow. Это свойство начинает работаеть, когда ширина сумм всех элементов
    меньше ширины родителя.


    Краткая запись
    flex: 0 1 auto;
    flex: flex-grow flex-shrink flex-basis
*/